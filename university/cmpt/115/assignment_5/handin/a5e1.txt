/* 
 * Maximilian Gewers 
 * 11163599
 * CMPT - 115 - 02
 * CMPT - 115 - T08
 */
 
Answer part

1) 
  Student
    refToCharacter firstName  // string
    refToCharacter lastName   // string
    integer studentNumber 
    refToCharacter NSID       // string format aaannn
    refToFloat grades         // array
    float mtExam              // midterm exam grade
    float finalExam           // final exam grade
    integer finalGrade      // final grade
    character finalLetterGrade      // final grade in letter form
  end Student


2)
- The Delete function has to change. We now also have to check if the new finalGrade and/or finalLetterGrade have anything in them and if they do delete them
- We may also add the two added finaGrade and finalLetterGrade to the original displayStudentRecord and display them OR display nothing if the content is NULL!
- We could also set these two to NULL in read student just so that it does not contain garbage when we call DisplayStudentRecord and to add some control over what will be displayed

3) 
Besides DisplayStudenRecord none would have to change. I guess we could have to specify that if finalGrade is set to NULL that part plus finalLetterGrade would not be displayed.
Besides that no return was changed no pre and only 1 post
although we have to change delete the post in delete still holds true

4)
Algorithm calculateFinalGrade(s)
  Pre: s :: refToStudent, a valid reference to a student record.
  Post: finalGrade and finalLetterGrade have been set.
  Return: nothing.

tempGrade <- (*s).finalExam * 0.4
tempGrade <- tempGrade + ( (*s).mtExam * 0.3 )
for c from 0 to 9 do
  tempGrade <- tempGrade + ( (*s).grades[c] * 0.03 )
end for
(*s).finalGrade <- tempGrade
if tempGrade >= 50 {
  (*s).finalLetterGrade <- 'F'
else if tempGrad >= 59 and tempGrade <= 50
  (*s).finalLetterGrade <- 'D'
else if tempGrad >= 69 and tempGrade <= 60
  (*s).finalLetterGrade <- 'C'
else if tempGrad >= 79 and tempGrade <= 70
  (*s).finalLetterGrade <- 'B'
else if tempGrad >= 100 and tempGrade <= 100
  (*s).finalLetterGrade <- 'A'
end if


Algorithm displayFinalGrade(s)
  Pre: s :: refToStudent, a valid reference to a student record.
  Post: name and final grade data help in s is displayed.
  Return: nothing.

  Print  (*s).firstName (*s).lastName "Has the final Grade of : " (*s).finalGrade, "Which is a : " (*s).finalLetterGrade. 

5)
It was like I expected. I had to do some thinking and I had to revisit each of the function to make sure I am not missing anything but other than that it wasn't that difficult. The fact that I had pseudo code given to me which I knew was 100% correct was helpful.

6) Like I said in 5) the fact that the code was 100% correct and 100% understandable made it very easy. on top of that my pseudo code looked very similar to the one in Design_Operations